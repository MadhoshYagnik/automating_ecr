name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1                   # Replace with your preferred AWS region
      ECR_REPOSITORY: automating_ecr           # Replace with your ECR repository name
      ECS_SERVICE: my-service                   # Replace with your ECS service name
      ECS_CLUSTER: my-cluster                   # Replace with your ECS cluster name
      ECS_TASK_DEFINITION: ecs_task_def.JSON    # Replace with your ECS task definition file
      CONTAINER_NAME: my-container              # Replace with your container name

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest
          docker push ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Render ECS Task Definition
        run: |
          sed -i "s|REPLACE_IMAGE|${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest|g" $ECS_TASK_DEFINITION

      - name: Deploy Amazon ECS task definition
        run: |
          aws ecs register-task-definition --cli-input-json file://$ECS_TASK_DEFINITION
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
